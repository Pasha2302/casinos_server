# Generated by Django 5.0 on 2024-01-02 05:01

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AffiliatesProgram',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default=None, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='BaseCurrency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('symbol', models.CharField(max_length=255, null=True, unique=True, verbose_name='Symbol Currency')),
                ('name', models.CharField(max_length=255, null=True, verbose_name='Name Currency')),
            ],
            options={
                'verbose_name': 'Base Currency',
                'verbose_name_plural': 'Base Currencies',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Bonus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True, verbose_name='Bonus Slug')),
                ('name', models.CharField(default=None, max_length=255, verbose_name='Bonus Name')),
                ('link', models.URLField(blank=True, null=True, verbose_name='Bonus URL')),
                ('social_bonuses', models.BooleanField(default=False)),
                ('bonus_plus_deposit', models.IntegerField(null=True, verbose_name='Bonus + Deposit')),
                ('bonus_only', models.IntegerField(null=True, verbose_name='Bonus Only')),
                ('bonus_plus_freespins_value', models.IntegerField(blank=True, null=True, verbose_name='Bonus + Freespins value')),
            ],
            options={
                'verbose_name_plural': 'Bonuses',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='BonusSubtype',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default=None, max_length=255, verbose_name='Name Bonus Subtype')),
            ],
        ),
        migrations.CreateModel(
            name='BonusType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default=None, max_length=255, verbose_name='Name Bonus Type')),
            ],
            options={
                'verbose_name': 'Bonus Type',
                'verbose_name_plural': 'Types of Bonuses',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True)),
                ('name', models.CharField(max_length=255, verbose_name='Country Name')),
                ('name2', models.CharField(blank=True, max_length=255, null=True, verbose_name='Country Name-2')),
                ('name3', models.CharField(blank=True, max_length=255, null=True, verbose_name='Country Name-3')),
            ],
            options={
                'verbose_name': 'Country',
                'verbose_name_plural': 'Countries',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True)),
                ('name', models.CharField(db_index=True, max_length=255, verbose_name='Game Name')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='GameType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True)),
                ('name', models.CharField(max_length=255, verbose_name='Casino Name')),
            ],
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=255, unique=True)),
                ('name', models.CharField(max_length=255, verbose_name='Language')),
            ],
        ),
        migrations.CreateModel(
            name='LicensingAuthority',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True)),
                ('name', models.CharField(max_length=255, verbose_name='Name of authority')),
                ('validator_url', models.URLField(blank=True, null=True, verbose_name='Validator Url')),
            ],
            options={
                'verbose_name': 'Licensing Authority',
                'verbose_name_plural': 'Licensing Authorities',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True)),
                ('name', models.CharField(max_length=255, verbose_name='Game Name')),
            ],
        ),
        migrations.CreateModel(
            name='Provider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True)),
                ('name', models.CharField(max_length=255, verbose_name='Casino Name')),
            ],
        ),
        migrations.CreateModel(
            name='WageringContributionValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(default=None, max_length=255, verbose_name='Wagering Contribution Description')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ClassicCurrency',
            fields=[
                ('basecurrency_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app_casinos.basecurrency')),
            ],
            options={
                'verbose_name': 'Classic Currency',
                'verbose_name_plural': 'Classic Currencies',
                'ordering': ['id'],
            },
            bases=('app_casinos.basecurrency',),
        ),
        migrations.CreateModel(
            name='CryptoCurrency',
            fields=[
                ('basecurrency_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app_casinos.basecurrency')),
            ],
            options={
                'verbose_name': 'Crypto Currency',
                'verbose_name_plural': 'Crypto Currencies',
                'ordering': ['id'],
            },
            bases=('app_casinos.basecurrency',),
        ),
        migrations.CreateModel(
            name='BonusAmount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.IntegerField(null=True, verbose_name='(CAP) value')),
                ('selected_source', models.CharField(choices=[('undefined', 'Undefined'), ('terms_and_conditions', 'Terms & Conditions'), ('support', 'Support'), ('website', 'Website')], default='', max_length=20)),
                ('bonus', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bonus_amount', to='app_casinos.bonus', to_field='slug')),
                ('symbol', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bonus_amount_symbol', to='app_casinos.basecurrency')),
            ],
        ),
        migrations.CreateModel(
            name='BonusBuyFeature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('choice', models.BooleanField(default=False)),
                ('selected_source', models.CharField(choices=[('undefined', 'Undefined'), ('terms_and_conditions', 'Terms & Conditions'), ('support', 'Support'), ('website', 'Website')], default='', max_length=20)),
                ('bonus', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='buy_feature', to='app_casinos.bonus', to_field='slug')),
            ],
        ),
        migrations.CreateModel(
            name='BonusExpiration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('days', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30)], null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(30)], verbose_name='Amount of Days')),
                ('selected_source', models.CharField(choices=[('undefined', 'Undefined'), ('terms_and_conditions', 'Terms & Conditions'), ('support', 'Support'), ('website', 'Website')], default='', max_length=20)),
                ('bonus', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bonus_expiration', to='app_casinos.bonus', to_field='slug', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='BonusMaxBet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.IntegerField(blank=True, null=True, verbose_name='Bonus Max Bet value')),
                ('selected_source', models.CharField(choices=[('undefined', 'Undefined'), ('terms_and_conditions', 'Terms & Conditions'), ('support', 'Support'), ('website', 'Website')], default='', max_length=20)),
                ('bonus', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='max_bet', to='app_casinos.bonus', to_field='slug')),
                ('symbol', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bonus_max_bet', to='app_casinos.basecurrency')),
            ],
            options={
                'verbose_name': 'Bonus Max Bet',
                'verbose_name_plural': 'Bonus Max Bet',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='BonusMaxBetAutomatic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('automatic', models.BooleanField(default=False)),
                ('selected_source', models.CharField(choices=[('undefined', 'Undefined'), ('terms_and_conditions', 'Terms & Conditions'), ('support', 'Support'), ('website', 'Website')], default='', max_length=20)),
                ('bonus', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='max_bet_automatic', to='app_casinos.bonus', to_field='slug', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='BonusMaxWin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('max_value', models.IntegerField(null=True, verbose_name='Bonus Max Win value')),
                ('selected_source', models.CharField(choices=[('undefined', 'Undefined'), ('terms_and_conditions', 'Terms & Conditions'), ('support', 'Support'), ('website', 'Website')], default='', max_length=20)),
                ('bonus', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bonus_max_win', to='app_casinos.bonus', to_field='slug')),
                ('symbol', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bonus_max_win', to='app_casinos.basecurrency')),
            ],
        ),
        migrations.CreateModel(
            name='BonusMinDep',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_value', models.IntegerField(null=True, verbose_name='Bonus min dep value')),
                ('selected_source', models.CharField(choices=[('undefined', 'Undefined'), ('terms_and_conditions', 'Terms & Conditions'), ('support', 'Support'), ('website', 'Website')], default='', max_length=20)),
                ('bonus', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bonus_min_dep', to='app_casinos.bonus', to_field='slug')),
                ('symbol', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bonus_min_dep', to='app_casinos.basecurrency')),
            ],
        ),
        migrations.CreateModel(
            name='BonusRestrictionRtpGame',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField(null=True, verbose_name='Games with RTP higher than %')),
                ('selected_source', models.CharField(choices=[('undefined', 'Undefined'), ('terms_and_conditions', 'Terms & Conditions'), ('support', 'Support'), ('website', 'Website')], default='', max_length=20)),
                ('bonus', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='restriction_rtp_game', to='app_casinos.bonus', to_field='slug', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='BonusSpecialNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Special Note')),
                ('bonus', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='special_note', to='app_casinos.bonus', to_field='slug')),
            ],
        ),
        migrations.AddField(
            model_name='bonus',
            name='bonus_subtypes',
            field=models.ManyToManyField(blank=True, related_name='bonus', to='app_casinos.bonussubtype'),
        ),
        migrations.AddField(
            model_name='bonus',
            name='bonus_type',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bonus', to='app_casinos.bonustype'),
        ),
        migrations.CreateModel(
            name='BonusValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.IntegerField(null=True, verbose_name='Value %')),
                ('selected_source', models.CharField(choices=[('undefined', 'Undefined'), ('terms_and_conditions', 'Terms & Conditions'), ('support', 'Support'), ('website', 'Website')], default='', max_length=20)),
                ('bonus', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bonus_value', to='app_casinos.bonus', to_field='slug', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Casino',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True)),
                ('name', models.CharField(help_text='Name of the casino. For example - PlayRize Casino', max_length=255, verbose_name='Casino Name')),
                ('using_vpn', models.BooleanField(default=False, help_text='If VPN usage is allowed, please check the box')),
                ('sportsbook', models.BooleanField(default=False, help_text='If the casino has a sportsbook, please check the box')),
                ('link_affiliate_program', models.URLField(blank=True, null=True, verbose_name='affiliate Program URL')),
                ('link_affiliate', models.URLField(blank=True, null=True, verbose_name='Affiliate Link')),
                ('url', models.URLField(help_text='URL of the casino. For example - https://vavada.com', verbose_name='URL Website')),
                ('link_loyalty', models.URLField(blank=True, null=True, verbose_name='URL Loyalty')),
                ('link_casino_guru', models.URLField(help_text='URL of this casino on Casinoguru. For example - https://casinoguru-en.com/vavada-casino-review', verbose_name='URL Casino-Guru')),
                ('link_tc', models.URLField(help_text='URL of General T&C. For example - https://www.luckyblock.com/en/terms', verbose_name='URL General T&C')),
                ('link_bonus_tc', models.URLField(blank=True, help_text='URL of Bonus T&C. For example - https://www.luckyblock.com/en/bonus-terms', verbose_name='URL Bonus T&C')),
                ('link_bonuses', models.URLField(blank=True, help_text='URL of main bonus page. For example - https://www.luckyblock.com/en/promotions', null=True, verbose_name='URL Bonuses Main Page')),
                ('owner', models.CharField(blank=True, help_text='Casino company name. For example Luckyblock casino is owned by Entretenimiento Rojo B.V.', max_length=255, null=True, verbose_name='Casino Owner')),
                ('established', models.PositiveIntegerField(blank=True, help_text='Year of establishment of the casino', null=True, verbose_name='Year of Establishment')),
                ('wager_limit', models.BooleanField(default=False)),
                ('loss_limit', models.BooleanField(default=False)),
                ('session_limit', models.BooleanField(default=False)),
                ('self_exclusion', models.BooleanField(default=False)),
                ('cool_off', models.BooleanField(default=False)),
                ('reality_check', models.BooleanField(default=False)),
                ('self_assessment', models.BooleanField(default=False)),
                ('withdrawal_lock', models.BooleanField(default=False)),
                ('tournaments', models.BooleanField(default=False, verbose_name='Tournaments')),
                ('special_notes', models.TextField(blank=True)),
                ('live_chat_competence', models.IntegerField(choices=[(1, 'High Competence'), (2, 'Above Average'), (3, 'Average'), (4, 'Below Average'), (5, 'Incompetent')], default='High Competence')),
                ('bonus_hunt_active_bonus', models.BooleanField(default=False, help_text='If bonus hunt is allowed, please check the box')),
                ('affiliate_program', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='casino_affiliate_program', to='app_casinos.affiliatesprogram')),
                ('blocked_countries', models.ManyToManyField(help_text='List of restricted countries', related_name='casinos_blocked', to='app_casinos.country')),
                ('games', models.ManyToManyField(related_name='casino_games', to='app_casinos.game')),
                ('game_types', models.ManyToManyField(related_name='casino_game_types', to='app_casinos.gametype')),
                ('language_live_chat', models.ManyToManyField(help_text='List of languages in livechat', related_name='casino_live_chat', to='app_casinos.language')),
                ('language_website', models.ManyToManyField(help_text='List of languages present on the website', related_name='casino_website', to='app_casinos.language')),
                ('licenses', models.ManyToManyField(help_text='The license under which the casino operates', related_name='casino_licenses', to='app_casinos.licensingauthority')),
                ('payment_methods', models.ManyToManyField(related_name='casino_payment_method', to='app_casinos.paymentmethod')),
                ('game_providers', models.ManyToManyField(related_name='casino_providers', to='app_casinos.provider')),
                ('classic_currency', models.ManyToManyField(related_name='casino_classic_currency', to='app_casinos.classiccurrency')),
                ('crypto_currencies', models.ManyToManyField(related_name='casino_crypto_currencies', to='app_casinos.cryptocurrency')),
            ],
            options={
                'verbose_name': 'Casino',
                'verbose_name_plural': 'Casinos',
                'ordering': ['id'],
            },
        ),
        migrations.AddField(
            model_name='bonus',
            name='casino',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bonuses', to='app_casinos.casino', to_field='slug'),
        ),
        migrations.CreateModel(
            name='AccountData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('login', models.CharField(max_length=50, unique=True, verbose_name='Login')),
                ('password', models.CharField(max_length=15, verbose_name='Password')),
                ('casino', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='account_data', to='app_casinos.casino', to_field='slug')),
            ],
            options={
                'verbose_name': 'Account Data',
                'verbose_name_plural': 'Account Data',
                'ordering': ['login'],
            },
        ),
        migrations.CreateModel(
            name='CasinoImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='casino_images/', verbose_name='Casino Image')),
                ('casino', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='app_casinos.casino')),
            ],
        ),
        migrations.CreateModel(
            name='BonusRestrictionCountry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('selected_source', models.CharField(choices=[('undefined', 'Undefined'), ('terms_and_conditions', 'Terms & Conditions'), ('support', 'Support'), ('website', 'Website')], default='', max_length=20)),
                ('bonus', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='restriction_country', to='app_casinos.bonus', to_field='slug', unique=True)),
                ('country', models.ManyToManyField(related_name='bonus_restriction_country', to='app_casinos.country')),
            ],
        ),
        migrations.CreateModel(
            name='FreeSpinAmount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.IntegerField(null=True, verbose_name='Free Spins value')),
                ('selected_source', models.CharField(choices=[('undefined', 'Undefined'), ('terms_and_conditions', 'Terms & Conditions'), ('support', 'Support'), ('website', 'Website')], default='', max_length=20)),
                ('bonus', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='free_spin_amount', to='app_casinos.bonus', to_field='slug', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='BonusSlot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('selected_source', models.CharField(choices=[('undefined', 'Undefined'), ('terms_and_conditions', 'Terms & Conditions'), ('support', 'Support'), ('website', 'Website')], default='', max_length=20)),
                ('bonus', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bonus_slot', to='app_casinos.bonus', to_field='slug', unique=True)),
                ('game', models.ManyToManyField(related_name='bonus_game', to='app_casinos.game')),
            ],
        ),
        migrations.CreateModel(
            name='BonusRestrictionGame',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('selected_source', models.CharField(choices=[('undefined', 'Undefined'), ('terms_and_conditions', 'Terms & Conditions'), ('support', 'Support'), ('website', 'Website')], default='', max_length=20)),
                ('bonus', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='restriction_game', to='app_casinos.bonus', to_field='slug', unique=True)),
                ('game', models.ManyToManyField(related_name='bonus_restriction_game', to='app_casinos.game')),
            ],
        ),
        migrations.CreateModel(
            name='MinDep',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_value', models.IntegerField(null=True)),
                ('selected_source', models.CharField(choices=[('undefined', 'Undefined'), ('terms_and_conditions', 'Terms & Conditions'), ('support', 'Support'), ('website', 'Website')], default='', max_length=20)),
                ('casino', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='min_dep', to='app_casinos.casino', to_field='slug')),
                ('symbol', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='min_dip_symbol', to='app_casinos.basecurrency')),
            ],
        ),
        migrations.CreateModel(
            name='MinWagering',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_value', models.IntegerField(blank=True, null=True)),
                ('selected_source', models.CharField(choices=[('undefined', 'Undefined'), ('terms_and_conditions', 'Terms & Conditions'), ('support', 'Support'), ('website', 'Website')], default='', max_length=20)),
                ('unlimited', models.BooleanField(default=False)),
                ('casino', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='min_wagering', to='app_casinos.casino', to_field='slug')),
            ],
        ),
        migrations.CreateModel(
            name='OneSpin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField(null=True, verbose_name='One Spin value')),
                ('selected_source', models.CharField(choices=[('undefined', 'Undefined'), ('terms_and_conditions', 'Terms & Conditions'), ('support', 'Support'), ('website', 'Website')], default='', max_length=20)),
                ('bonus', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='one_spin', to='app_casinos.bonus', to_field='slug', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='PromotionPeriod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(verbose_name='Start Date')),
                ('end_date', models.DateField(verbose_name='End Date')),
                ('selected_source', models.CharField(choices=[('undefined', 'Undefined'), ('terms_and_conditions', 'Terms & Conditions'), ('support', 'Support'), ('website', 'Website')], default='', max_length=20)),
                ('bonus', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='promotion_period', to='app_casinos.bonus', to_field='slug', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='SisterCasino',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255)),
                ('selected_source', models.CharField(choices=[('undefined', 'Undefined'), ('terms_and_conditions', 'Terms & Conditions'), ('support', 'Support'), ('website', 'Website')], max_length=20)),
                ('casino', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sister_casinos', to='app_casinos.casino', to_field='slug')),
            ],
        ),
        migrations.CreateModel(
            name='Sticky',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sticky_value', models.BooleanField(default=False)),
                ('selected_source', models.CharField(choices=[('undefined', 'Undefined'), ('terms_and_conditions', 'Terms & Conditions'), ('support', 'Support'), ('website', 'Website')], default='', max_length=20)),
                ('bonus', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sticky', to='app_casinos.bonus', to_field='slug', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='TurnoverBonus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('turnover_value', models.BooleanField(default=False)),
                ('selected_source', models.CharField(choices=[('undefined', 'Undefined'), ('terms_and_conditions', 'Terms & Conditions'), ('support', 'Support'), ('website', 'Website')], default='', max_length=20)),
                ('bonus', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='turnover_bonus', to='app_casinos.bonus', to_field='slug', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Wager',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.IntegerField(null=True, verbose_name='Wager value')),
                ('selected_source', models.CharField(choices=[('undefined', 'Undefined'), ('terms_and_conditions', 'Terms & Conditions'), ('support', 'Support'), ('website', 'Website')], default='', max_length=20)),
                ('bonus', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='wager', to='app_casinos.bonus', to_field='slug', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Wagering',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tbwr', models.TextField(blank=True, null=True, verbose_name='Turnover bonus wagering requirement')),
                ('tbwe', models.TextField(blank=True, null=True, verbose_name='Turnover bonus wagering example')),
                ('selected_source', models.CharField(choices=[('undefined', 'Undefined'), ('terms_and_conditions', 'Terms & Conditions'), ('support', 'Support'), ('website', 'Website')], default='', max_length=20)),
                ('bonus', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='wagering', to='app_casinos.bonus', to_field='slug', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='WageringContribution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.IntegerField(null=True, verbose_name='Wagering Contribution value %')),
                ('selected_source', models.CharField(choices=[('undefined', 'Undefined'), ('terms_and_conditions', 'Terms & Conditions'), ('support', 'Support'), ('website', 'Website')], default='', max_length=20)),
                ('bonus', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='wagering_contribution', to='app_casinos.bonus', to_field='slug')),
                ('contribution_description', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='wagering_contribution', to='app_casinos.wageringcontributionvalue')),
            ],
        ),
        migrations.CreateModel(
            name='WithdrawalLimit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('daily', models.IntegerField(blank=True, null=True)),
                ('weekly', models.IntegerField(blank=True, null=True)),
                ('monthly', models.IntegerField(blank=True, null=True)),
                ('unlimited', models.BooleanField()),
                ('selected_source', models.CharField(choices=[('undefined', 'Undefined'), ('terms_and_conditions', 'Terms & Conditions'), ('support', 'Support'), ('website', 'Website')], default='', max_length=20)),
                ('casino', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='withdrawal_limit', to='app_casinos.casino')),
            ],
        ),
    ]
